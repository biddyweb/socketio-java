Frame Encoding
	:<opcode>:<size>:<message>
	<opcode> = 	"1" (session id) [Only sent by server, only sent once]
				"2" (Close)
				"3" (Ping)
				"4" (Pong)
				"5" (Text Message)
				"6" (JSON Message)
	<size> = [0-9]+
	<message> = <size> bytes

XHR-polling semantics:
	Connect
		GET /socket.io/xhr-polling//<timestamp>
			return session id and any messages queued by SocketIO.onConnect

	Receive
		GET /socket.io/xhr-polling/<session id>/<timestamp>
			return messages and status 200 or
			return nothing and status 404 indicating the connection has been closed.
			return status 409? or 503? if a GET request is already in progress.

	Send
		POST /socket.io/xhr-polling/<session id>/<timestamp>/send
			return 200 if message was processed.

	Close
		Server initiated
			If GET returns 404, the server has initiated a close.
			Client may perform one more POST that contains any remaining messages
			but it must post to /socket.io/xhr-polling/<session id>/close
		Client initiated
			POST /socket.io/xhr-polling/<session id>/close
				POST may include messages
				Client will not consider connection closed until server replies with 404 to GET request.

	Timeout
		Server
			Set timeout timer when get request finishes.
			Reset timeout every time GET request starts.
			Mark connection closed if timeout timer fires.

		Client
			If POST does not return within <timeout> then cancel it and GET and fire closed event.



Close
	local_close_state = (0=open, 1=close_sent, 2=Close ACK'ed)
	remote_close_state = (0=open, 1=close_received, 2=Close ACK'ed)

	Simple
		Set closeTypeRequested = CLOSE_SIMPLE
		Set state = CLOSING
		Send Close
		Set Close Timer
		Wait for buffer empty
			When Empty
				Set closeTypeAchieved = CLOSE_SIMPLE
				Set state = CLOSED
				Disconnect
			On close timeout
				Set state = CLOSED
				Disconnect
	Clean
		Set closeTypeRequested = CLOSE_SIMPLE
		Set state = CLOSING
		Send Close
		Set Close Timer
		Events
			OnBufferEmpty
				Set closeTypeAchieved = CLOSE_SIMPLE
			OnClose
				Set closeTypeAchieved = CLOSE_CLEAN
		Wait for buffer empty
			When Empty
		Wait for Close from Remote
		
		